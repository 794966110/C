/*利用数组求解约瑟夫问题：设有n个人站成一圈，其编号从1～n。从编号为1的人开始按顺时针方向“1，2，3，4，…”循环报数，数到m的人出列，然后从出列者的下一个人重新开始报数，数到m的人又出列，如此重复进行，直到n个人都出列为止。要求输出这n个人的出列顺序。
    例如，有8个人的初始序列为
      1  2  3  4  5  6  7  8
    当m=4时，出列顺序为
      4  8  5  2  1  3  7  6
*/


#include<stdio.h>

#define maxsize 8


void Queue(int n,int m)
{
	int a[maxsize];int t=0,i,j;
	for (int i = 0;i < n;i++)//初始化a[]
	{
		a[i] = i+1;
	}
	for (i = n;i >= 1;i--)//出列一次，数组大小i减小一次
	{
		t = (t + m - 1) % i;//t为出列元素的下标
		printf("%d ", a[t]);//下标为t元素的输出
		for (j = t+1;j < i;j++)//数组往前覆盖，覆盖完后i--，数组大小随i减小
		{
			a[j - 1] = a[j];
		}
	}

}

int main()
{	
	
	Queue(maxsize,4);
	
	return 0;
}
